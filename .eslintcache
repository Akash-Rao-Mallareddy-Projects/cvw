[{"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\App.js":"1","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\index.js":"2","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\Header.js":"3","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\reportWebVitals.js":"4","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\CandidateRecords.js":"5","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\CandidateDetails.js":"6","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\CandidateVerify.js":"7"},{"size":690,"mtime":1606292599422,"results":"8","hashOfConfig":"9"},{"size":500,"mtime":1606115923079,"results":"10","hashOfConfig":"9"},{"size":19149,"mtime":1606304138123,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1606115923079,"results":"12","hashOfConfig":"9"},{"size":1893,"mtime":1606289946090,"results":"13","hashOfConfig":"9"},{"size":4368,"mtime":1606302234416,"results":"14","hashOfConfig":"9"},{"size":3403,"mtime":1606309593669,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xihnyp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\App.js",["32"],"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\index.js",[],"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\Header.js",["33","34","35","36","37","38","39","40"],"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\reportWebVitals.js",[],"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\CandidateRecords.js",["41"],"import React,{Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass CandidateRecords extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            candidates:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/admin/')\r\n            .then(response=>{\r\n                this.setState({\r\n                    candidates: response.data\r\n                })\r\n            })\r\n            .catch(err=> console.log(err))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>All Candidates</h3>\r\n                    <table className=\"table\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Code</th>\r\n                                <th>Name</th>\r\n                                <th>Event</th>\r\n                                <th>Date</th>\r\n                                <th>Month</th>\r\n                                <th>Year</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.candidates.map((candidate)=> {return(\r\n                                <tr key={candidate._id}>\r\n                                    <td>{candidate.code}</td>\r\n                                    <td>{candidate.name}</td>\r\n                                    <td>{candidate.event}</td>\r\n                                    <td>{candidate.date}</td>\r\n                                    <td>{candidate.month}</td>\r\n                                    <td>{candidate.year}</td>\r\n                                </tr>\r\n                            )})}\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CandidateRecords\r\n\r\n","D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\CandidateDetails.js",[],"D:\\Web Development work\\revolt talks internship\\ui cert-generator\\application\\src\\components\\CandidateVerify.js",["42"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport CandidateDetails from './CandidateDetails';\r\n\r\nclass CandidateVerify extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            code: \"\",\r\n            candidates: [],\r\n            candidate: \"\",\r\n            bro: \"ji\"\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/admin/')\r\n            .then(response=>{\r\n                this.setState({\r\n                    candidates: response.data\r\n                })\r\n            })\r\n            .catch(err=> console.log(err))\r\n    }\r\n\r\n    onChange(e){\r\n        const {name,value} = e.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const code = this.state.code;\r\n        console.log(code);\r\n\r\n        // axios.post('http://localhost:5000/',code)\r\n        //     .then(res=> console.log(res.data));\r\n\r\n        // axios.post('http://localhost:5000/',code)\r\n        //     .then(response=>{\r\n        //         this.setState({\r\n        //             candidate: response.data\r\n        //         })\r\n        //     })\r\n        //     .catch(err=> console.log(err))\r\n\r\n        // axios.post('http://localhost:5000/',code)\r\n        //     .then(res=> {console.log(res.data)});\r\n\r\n         var currcandidates = this.state.candidates.filter(el => el.code == code);\r\n\r\n\r\n        // console.log(this.state.candidate);\r\n\r\n        // window.location = '/candidate';\r\n\r\n        // var currcandidate = this.state.candidates.map((candidate)=>{\r\n        //     return(candidate.code === code ? candidate : \"hey\")\r\n        // })\r\n\r\n        console.log(currcandidates[0]);\r\n\r\n        this.setState({\r\n            candidate : currcandidates,\r\n            bro: \"ji bhai\"\r\n        })\r\n\r\n        console.log(this.state.candidate + this.state.bro)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <img src=\"https://givemycertificate.com/style/images/concept/concept1.png\" width=\"300px\" alt=\"\" />\r\n                <h3>Verify Your Certificate</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Unique Code : </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.code}\r\n                            name=\"code\"\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Verify Candidate\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n                {/* <h1>{this.state.code}</h1> */}\r\n                {/* <CandidateDetails code={this.state.code} candidates={this.state.candidates}  /> */}\r\n                {/* <h1>{this.state.candidate[0].event}</h1> */}\r\n                {this.state.candidate.length>0 ? <CandidateDetails candidates={this.state.candidate[0]} /> : \"\"}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CandidateVerify",{"ruleId":"43","severity":1,"message":"44","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":438,"column":10,"nodeType":"49","endLine":438,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":442,"column":10,"nodeType":"49","endLine":442,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":451,"column":15,"nodeType":"49","endLine":451,"endColumn":62},{"ruleId":"47","severity":1,"message":"48","line":452,"column":15,"nodeType":"49","endLine":452,"endColumn":65},{"ruleId":"47","severity":1,"message":"48","line":453,"column":15,"nodeType":"49","endLine":453,"endColumn":64},{"ruleId":"47","severity":1,"message":"48","line":454,"column":15,"nodeType":"49","endLine":454,"endColumn":66},{"ruleId":"47","severity":1,"message":"48","line":455,"column":15,"nodeType":"49","endLine":455,"endColumn":61},{"ruleId":"47","severity":1,"message":"48","line":456,"column":15,"nodeType":"49","endLine":456,"endColumn":62},{"ruleId":"43","severity":1,"message":"50","line":2,"column":9,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":57,"column":74,"nodeType":"53","messageId":"54","endLine":57,"endColumn":76},"no-unused-vars","'CandidateDetails' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]